package phfa.node;

@:keep class Shot extends armory.logicnode.LogicTree {

	var functionNodes:Map<String, armory.logicnode.FunctionNode>;

	var functionOutputNodes:Map<String, armory.logicnode.FunctionOutputNode>;

	public function new() {
		super();
		this.functionNodes = new Map();
		this.functionOutputNodes = new Map();
		notifyOnAdd(add);
	}

	override public function add() {
		var _CanvasSetSlider = new armory.logicnode.CanvasSetSliderNode(this);
		var _Merge_004 = new armory.logicnode.MergeNode(this);
		var _Gate = new armory.logicnode.GateNode(this);
		_Gate.property0 = "Greater Equal";
		_Gate.property1 = 9.999999747378752e-05;
		var _Branch = new armory.logicnode.BranchNode(this);
		var _Branch_006 = new armory.logicnode.BranchNode(this);
		var _OnSurface = new armory.logicnode.OnSurfaceNode(this);
		_OnSurface.property0 = "Released";
		_OnSurface.addOutputs([_Branch_006]);
		_Branch_006.addInput(_OnSurface, 0);
		var _GetProperty_003 = new armory.logicnode.GetPropertyNode(this);
		var _Self = new armory.logicnode.SelfNode(this);
		var _GetProperty = new armory.logicnode.GetPropertyNode(this);
		_GetProperty.addInput(_Self, 0);
		_GetProperty.addInput(new armory.logicnode.StringNode(this, "ShotAllowed"), 0);
		var _Branch_001 = new armory.logicnode.BranchNode(this);
		var _Branch_005 = new armory.logicnode.BranchNode(this);
		var _OnCanvasElement = new armory.logicnode.OnCanvasElementNode(this);
		_OnCanvasElement.property0 = "click";
		_OnCanvasElement.property1 = "down";
		_OnCanvasElement.property2 = "left";
		_OnCanvasElement.addInput(new armory.logicnode.StringNode(this, "Rotate"), 0);
		_OnCanvasElement.addOutputs([_Branch_005]);
		_Branch_005.addInput(_OnCanvasElement, 0);
		_Branch_005.addInput(_GetProperty_003, 0);
		_Branch_005.addOutputs([new armory.logicnode.NullNode(this)]);
		_Branch_005.addOutputs([_Branch_001]);
		_Branch_001.addInput(_Branch_005, 1);
		_Branch_001.addInput(_GetProperty, 0);
		var _Gate_001 = new armory.logicnode.GateNode(this);
		_Gate_001.property0 = "Less";
		_Gate_001.property1 = 9.999999747378752e-05;
		_Gate_001.addInput(_Branch_001, 0);
		var _CanvasGetSlider = new armory.logicnode.CanvasGetSliderNode(this);
		_CanvasGetSlider.addInput(new armory.logicnode.StringNode(this, "Impulse"), 0);
		var _Math_001 = new armory.logicnode.MathNode(this);
		_Math_001.property0 = "Multiply";
		_Math_001.property1 = "false";
		_Math_001.addInput(_CanvasGetSlider, 0);
		_Math_001.addInput(new armory.logicnode.FloatNode(this, 40.0), 0);
		var _Vector_001 = new armory.logicnode.VectorNode(this);
		_Vector_001.addInput(_Math_001, 0);
		_Vector_001.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_001.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		var _ApplyImpulse = new armory.logicnode.ApplyImpulseNode(this);
		var _Sequence_001 = new armory.logicnode.SequenceNode(this);
		var _Sequence = new armory.logicnode.SequenceNode(this);
		_Sequence.addInput(_Gate, 0);
		var _SetProperty = new armory.logicnode.SetPropertyNode(this);
		_SetProperty.addInput(_Sequence, 0);
		_SetProperty.addInput(_Self, 0);
		_SetProperty.addInput(_GetProperty, 1);
		var _Boolean = new armory.logicnode.BooleanNode(this);
		_Boolean.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		var _SetProperty_002 = new armory.logicnode.SetPropertyNode(this);
		var _Sequence_002 = new armory.logicnode.SequenceNode(this);
		var _Merge = new armory.logicnode.MergeNode(this);
		var _Sequence_008 = new armory.logicnode.SequenceNode(this);
		var _Merge_002 = new armory.logicnode.MergeNode(this);
		var _OnEvent_006 = new armory.logicnode.OnEventNode(this);
		_OnEvent_006.property0 = "ShowInterface";
		_OnEvent_006.addOutputs([_Merge_002]);
		_Merge_002.addInput(_OnEvent_006, 0);
		var _OnEvent = new armory.logicnode.OnEventNode(this);
		_OnEvent.property0 = "Undo";
		var _Merge_001 = new armory.logicnode.MergeNode(this);
		var _Sequence_004 = new armory.logicnode.SequenceNode(this);
		var _OnEvent_001 = new armory.logicnode.OnEventNode(this);
		_OnEvent_001.property0 = "Validate";
		_OnEvent_001.addOutputs([_Sequence_004]);
		_Sequence_004.addInput(_OnEvent_001, 0);
		_Sequence_004.addOutputs([_Merge_001]);
		var _SetProperty_006 = new armory.logicnode.SetPropertyNode(this);
		_SetProperty_006.addInput(_Sequence_004, 1);
		_SetProperty_006.addInput(new armory.logicnode.ObjectNode(this, "Rearm"), 0);
		_SetProperty_006.addInput(new armory.logicnode.StringNode(this, "Rearmable"), 0);
		_SetProperty_006.addInput(_Boolean, 0);
		_SetProperty_006.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_004.addOutputs([_SetProperty_006]);
		var _SendGlobalEvent_002 = new armory.logicnode.SendGlobalEventNode(this);
		_SendGlobalEvent_002.addInput(_Sequence_004, 2);
		_SendGlobalEvent_002.addInput(new armory.logicnode.StringNode(this, "CheckShot"), 0);
		_SendGlobalEvent_002.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_004.addOutputs([_SendGlobalEvent_002]);
		_Merge_001.addInput(_Sequence_004, 0);
		_Merge_001.addInput(_OnEvent, 0);
		var _Sequence_005 = new armory.logicnode.SequenceNode(this);
		_Sequence_005.addInput(_Merge_001, 0);
		var _CanvasSetVisible_002 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_002.addInput(_Sequence_005, 0);
		_CanvasSetVisible_002.addInput(new armory.logicnode.StringNode(this, "Validate"), 0);
		_CanvasSetVisible_002.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_002.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_005.addOutputs([_CanvasSetVisible_002]);
		var _CanvasSetVisible_003 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_003.addInput(_Sequence_005, 1);
		_CanvasSetVisible_003.addInput(new armory.logicnode.StringNode(this, "Undo"), 0);
		_CanvasSetVisible_003.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_003.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_005.addOutputs([_CanvasSetVisible_003]);
		_Merge_001.addOutputs([_Sequence_005]);
		var _CanvasSetText = new armory.logicnode.CanvasSetTextNode(this);
		_CanvasSetText.addInput(_OnEvent, 0);
		_CanvasSetText.addInput(new armory.logicnode.StringNode(this, "Message"), 0);
		_CanvasSetText.addInput(new armory.logicnode.StringNode(this, "Jogada desfeita!"), 0);
		var _Merge_003 = new armory.logicnode.MergeNode(this);
		var _CanvasSetText_002 = new armory.logicnode.CanvasSetTextNode(this);
		var _Gate_002 = new armory.logicnode.GateNode(this);
		_Gate_002.property0 = "Greater Equal";
		_Gate_002.property1 = 9.999999747378752e-05;
		var _Branch_004 = new armory.logicnode.BranchNode(this);
		var _Branch_007 = new armory.logicnode.BranchNode(this);
		var _OnCanvasElement_003 = new armory.logicnode.OnCanvasElementNode(this);
		_OnCanvasElement_003.property0 = "click";
		_OnCanvasElement_003.property1 = "released";
		_OnCanvasElement_003.property2 = "left";
		_OnCanvasElement_003.addInput(new armory.logicnode.StringNode(this, "Impulse"), 0);
		_OnCanvasElement_003.addOutputs([_Branch_007]);
		_Branch_007.addInput(_OnCanvasElement_003, 0);
		_Branch_007.addInput(_GetProperty_003, 0);
		_Branch_007.addOutputs([new armory.logicnode.NullNode(this)]);
		_Branch_007.addOutputs([_Branch_004]);
		_Branch_004.addInput(_Branch_007, 1);
		_Branch_004.addInput(_GetProperty, 0);
		_Branch_004.addOutputs([_Gate_002]);
		_Branch_004.addOutputs([new armory.logicnode.NullNode(this)]);
		_Gate_002.addInput(_Branch_004, 0);
		_Gate_002.addInput(_CanvasGetSlider, 0);
		var _Float = new armory.logicnode.FloatNode(this);
		_Float.addInput(new armory.logicnode.FloatNode(this, 0.25), 0);
		_Float.addOutputs([_Gate, _Gate_002, _Gate_001]);
		_Gate_002.addInput(_Float, 0);
		_Gate_002.addOutputs([new armory.logicnode.NullNode(this)]);
		_Gate_002.addOutputs([_CanvasSetText_002]);
		_CanvasSetText_002.addInput(_Gate_002, 1);
		_CanvasSetText_002.addInput(new armory.logicnode.StringNode(this, "Message"), 0);
		_CanvasSetText_002.addInput(new armory.logicnode.StringNode(this, "Impulso insuficiente!"), 0);
		_CanvasSetText_002.addOutputs([_Merge_003]);
		_Merge_003.addInput(_CanvasSetText_002, 0);
		_Merge_003.addInput(_CanvasSetText, 0);
		var _Timer_002 = new armory.logicnode.TimerNode(this);
		_Timer_002.addInput(_Merge_003, 0);
		_Timer_002.addInput(new armory.logicnode.NullNode(this), 0);
		var _OnEvent_002 = new armory.logicnode.OnEventNode(this);
		_OnEvent_002.property0 = "MainMenuConfirm";
		var _Timer = new armory.logicnode.TimerNode(this);
		_Timer.addInput(_Sequence_001, 2);
		_Timer.addInput(new armory.logicnode.NullNode(this), 0);
		_Timer.addInput(_OnEvent_002, 0);
		var _Math_005 = new armory.logicnode.MathNode(this);
		_Math_005.property0 = "Add";
		_Math_005.property1 = "false";
		var _Math_004 = new armory.logicnode.MathNode(this);
		_Math_004.property0 = "Multiply";
		_Math_004.property1 = "false";
		_Math_004.addInput(_Math_001, 0);
		_Math_004.addInput(new armory.logicnode.FloatNode(this, 0.10000000149011612), 0);
		_Math_004.addOutputs([_Math_005]);
		_Math_005.addInput(_Math_004, 0);
		_Math_005.addInput(new armory.logicnode.FloatNode(this, 3.0), 0);
		_Math_005.addOutputs([_Timer]);
		_Timer.addInput(_Math_005, 0);
		_Timer.addInput(new armory.logicnode.IntegerNode(this, 1), 0);
		_Timer.addOutputs([new armory.logicnode.NullNode(this)]);
		var _Sequence_003 = new armory.logicnode.SequenceNode(this);
		_Sequence_003.addInput(_Timer, 1);
		var _SendGlobalEvent = new armory.logicnode.SendGlobalEventNode(this);
		_SendGlobalEvent.addInput(_Sequence_003, 0);
		_SendGlobalEvent.addInput(new armory.logicnode.StringNode(this, "RemovePhysics"), 0);
		_SendGlobalEvent.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_003.addOutputs([_SendGlobalEvent]);
		var _CanvasSetVisible = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible.addInput(_Sequence_003, 1);
		_CanvasSetVisible.addInput(new armory.logicnode.StringNode(this, "Validate"), 0);
		_CanvasSetVisible.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_003.addOutputs([_CanvasSetVisible]);
		var _CanvasSetVisible_001 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_001.addInput(_Sequence_003, 2);
		_CanvasSetVisible_001.addInput(new armory.logicnode.StringNode(this, "Undo"), 0);
		_CanvasSetVisible_001.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_003.addOutputs([_CanvasSetVisible_001]);
		_Timer.addOutputs([_Sequence_003]);
		_Timer.addOutputs([new armory.logicnode.BooleanNode(this, false)]);
		_Timer.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_Timer.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_Timer.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_Timer.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		var _Timer_001 = new armory.logicnode.TimerNode(this);
		_Timer_001.addInput(_Sequence, 4);
		_Timer_001.addInput(new armory.logicnode.NullNode(this), 0);
		_Timer_001.addInput(_OnEvent_002, 0);
		_Timer_001.addInput(new armory.logicnode.FloatNode(this, 0.25), 0);
		_Timer_001.addInput(new armory.logicnode.IntegerNode(this, 1), 0);
		_Timer_001.addOutputs([new armory.logicnode.NullNode(this)]);
		var _SetVisible_001 = new armory.logicnode.SetVisibleNode(this);
		_SetVisible_001.addInput(_Timer_001, 1);
		_SetVisible_001.addInput(new armory.logicnode.ObjectNode(this, "Cue"), 0);
		_SetVisible_001.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		var _Merge_008 = new armory.logicnode.MergeNode(this);
		var _Sequence_012 = new armory.logicnode.SequenceNode(this);
		var _Alternate = new armory.logicnode.AlternateNode(this);
		var _OnEvent_003 = new armory.logicnode.OnEventNode(this);
		_OnEvent_003.property0 = "UpView";
		_OnEvent_003.addOutputs([_Alternate]);
		_Alternate.addInput(_OnEvent_003, 0);
		_Alternate.addOutputs([_Sequence_012]);
		var _Sequence_013 = new armory.logicnode.SequenceNode(this);
		_Sequence_013.addInput(_Alternate, 1);
		_Sequence_013.addOutputs([_Merge_002]);
		var _Merge_006 = new armory.logicnode.MergeNode(this);
		var _Sequence_006 = new armory.logicnode.SequenceNode(this);
		_Sequence_006.addInput(_Sequence_008, 6);
		var _SetLocation = new armory.logicnode.SetLocationNode(this);
		_SetLocation.addInput(_Sequence_006, 0);
		_SetLocation.addInput(new armory.logicnode.ObjectNode(this, "Direction"), 0);
		var _GetLocation = new armory.logicnode.GetLocationNode(this);
		_GetLocation.addInput(_Self, 0);
		_GetLocation.addOutputs([_SetLocation]);
		_SetLocation.addInput(_GetLocation, 0);
		_SetLocation.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_006.addOutputs([_SetLocation]);
		var _SetVisible_002 = new armory.logicnode.SetVisibleNode(this);
		_SetVisible_002.addInput(_Sequence_006, 1);
		_SetVisible_002.addInput(_Self, 0);
		_SetVisible_002.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_SetVisible_002.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_006.addOutputs([_SetVisible_002]);
		var _SetVisible = new armory.logicnode.SetVisibleNode(this);
		_SetVisible.addInput(_Sequence_006, 2);
		_SetVisible.addInput(new armory.logicnode.ObjectNode(this, "Cue"), 0);
		_SetVisible.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_SetVisible.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_006.addOutputs([_SetVisible]);
		_Sequence_006.addOutputs([_Merge_006]);
		var _Merge_005 = new armory.logicnode.MergeNode(this);
		var _RotateObject = new armory.logicnode.RotateObjectNode(this);
		_RotateObject.addInput(_Gate_001, 0);
		_RotateObject.addInput(new armory.logicnode.ObjectNode(this, "Direction"), 0);
		var _Vector = new armory.logicnode.VectorNode(this);
		_Vector.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		var _Math = new armory.logicnode.MathNode(this);
		_Math.property0 = "Multiply";
		_Math.property1 = "false";
		var _SeparateXYZ = new armory.logicnode.SeparateVectorNode(this);
		var _SurfaceCoords = new armory.logicnode.SurfaceCoordsNode(this);
		_SurfaceCoords.addOutputs([new armory.logicnode.VectorNode(this, 0.0, 0.0, 0.0)]);
		_SurfaceCoords.addOutputs([_SeparateXYZ]);
		_SeparateXYZ.addInput(_SurfaceCoords, 1);
		_SeparateXYZ.addOutputs([_Math]);
		_SeparateXYZ.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_SeparateXYZ.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_Math.addInput(_SeparateXYZ, 0);
		_Math.addInput(new armory.logicnode.FloatNode(this, -0.0012499999720603228), 0);
		_Math.addOutputs([_Vector]);
		_Vector.addInput(_Math, 0);
		var _RotateObject_001 = new armory.logicnode.RotateObjectNode(this);
		var _Gate_003 = new armory.logicnode.GateNode(this);
		_Gate_003.property0 = "Equal";
		_Gate_003.property1 = 9.999999747378752e-05;
		var _Branch_008 = new armory.logicnode.BranchNode(this);
		var _OnSurface_002 = new armory.logicnode.OnSurfaceNode(this);
		_OnSurface_002.property0 = "Moved";
		_OnSurface_002.addOutputs([_Branch_008]);
		_Branch_008.addInput(_OnSurface_002, 0);
		_Branch_008.addInput(_GetProperty_003, 0);
		_Branch_008.addOutputs([_Gate_003]);
		_Branch_008.addOutputs([new armory.logicnode.NullNode(this)]);
		_Gate_003.addInput(_Branch_008, 0);
		var _GetName = new armory.logicnode.GetNameNode(this);
		var _ActiveCamera = new armory.logicnode.ActiveCameraNode(this);
		_ActiveCamera.addOutputs([_GetName]);
		_GetName.addInput(_ActiveCamera, 0);
		_GetName.addOutputs([_Gate_003]);
		_Gate_003.addInput(_GetName, 0);
		var _GetName_001 = new armory.logicnode.GetNameNode(this);
		_GetName_001.addInput(new armory.logicnode.ObjectNode(this, "UpView"), 0);
		_GetName_001.addOutputs([_Gate_003]);
		_Gate_003.addInput(_GetName_001, 0);
		_Gate_003.addOutputs([_RotateObject_001]);
		_Gate_003.addOutputs([new armory.logicnode.NullNode(this)]);
		_RotateObject_001.addInput(_Gate_003, 0);
		_RotateObject_001.addInput(new armory.logicnode.ObjectNode(this, "AxisUpView"), 0);
		_RotateObject_001.addInput(_Vector, 0);
		_RotateObject_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_Vector.addOutputs([_RotateObject, _RotateObject_001]);
		_RotateObject.addInput(_Vector, 0);
		var _Merge_009 = new armory.logicnode.MergeNode(this);
		_Merge_009.addInput(_RotateObject, 0);
		_Merge_009.addInput(_Sequence_012, 0);
		var _SetRotation_001 = new armory.logicnode.SetRotationNode(this);
		_SetRotation_001.property0 = "Euler Angles";
		_SetRotation_001.addInput(_Merge_009, 0);
		_SetRotation_001.addInput(new armory.logicnode.ObjectNode(this, "AxisUpView"), 0);
		var _GetRotation = new armory.logicnode.GetRotationNode(this);
		_GetRotation.addInput(new armory.logicnode.ObjectNode(this, "Direction"), 0);
		var _SetRotation_002 = new armory.logicnode.SetRotationNode(this);
		_SetRotation_002.property0 = "Euler Angles";
		_SetRotation_002.addInput(_Merge_005, 0);
		_SetRotation_002.addInput(_Self, 0);
		_SetRotation_002.addInput(_GetRotation, 0);
		_SetRotation_002.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_SetRotation_002.addOutputs([new armory.logicnode.NullNode(this)]);
		_GetRotation.addOutputs([_SetRotation_001, _SetRotation_002]);
		_GetRotation.addOutputs([new armory.logicnode.VectorNode(this, 0.0, 0.0, 0.0)]);
		_GetRotation.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_GetRotation.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_GetRotation.addOutputs([new armory.logicnode.VectorNode(this, 0.0, 0.0, 0.0)]);
		_GetRotation.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_SetRotation_001.addInput(_GetRotation, 0);
		_SetRotation_001.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_SetRotation_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_Merge_009.addOutputs([_SetRotation_001]);
		_RotateObject.addOutputs([_Merge_005, _Merge_009]);
		_Merge_005.addInput(_RotateObject, 0);
		_Merge_005.addInput(_Sequence_006, 4);
		_Merge_005.addOutputs([_SetRotation_002]);
		_Sequence_006.addOutputs([_Merge_005]);
		var _CanvasSetVisible_028 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_028.addInput(_Sequence_006, 5);
		_CanvasSetVisible_028.addInput(new armory.logicnode.StringNode(this, "UpView"), 0);
		_CanvasSetVisible_028.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_028.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_006.addOutputs([_CanvasSetVisible_028]);
		var _SetProperty_001 = new armory.logicnode.SetPropertyNode(this);
		_SetProperty_001.addInput(_Sequence_006, 6);
		_SetProperty_001.addInput(_Self, 0);
		_SetProperty_001.addInput(_GetProperty, 1);
		var _Boolean_001 = new armory.logicnode.BooleanNode(this);
		_Boolean_001.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		var _SetProperty_008 = new armory.logicnode.SetPropertyNode(this);
		var _Sequence_007 = new armory.logicnode.SequenceNode(this);
		var _Merge_007 = new armory.logicnode.MergeNode(this);
		var _CanvasSetVisible_027 = new armory.logicnode.CanvasSetVisibleNode(this);
		var _OnEvent_005 = new armory.logicnode.OnEventNode(this);
		_OnEvent_005.property0 = "HideInterface";
		_OnEvent_005.addOutputs([_CanvasSetVisible_027]);
		_CanvasSetVisible_027.addInput(_OnEvent_005, 0);
		_CanvasSetVisible_027.addInput(new armory.logicnode.StringNode(this, "UpView"), 0);
		_CanvasSetVisible_027.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_027.addOutputs([_Merge_007]);
		_Merge_007.addInput(_CanvasSetVisible_027, 0);
		_Merge_007.addInput(_Sequence_012, 1);
		_Merge_007.addOutputs([_Sequence_007]);
		_Sequence_007.addInput(_Merge_007, 0);
		_Sequence_007.addOutputs([_SetProperty_008]);
		var _CanvasSetVisible_010 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_010.addInput(_Sequence_007, 1);
		_CanvasSetVisible_010.addInput(new armory.logicnode.StringNode(this, "CurrentPlayer"), 0);
		_CanvasSetVisible_010.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_010.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_007.addOutputs([_CanvasSetVisible_010]);
		var _CanvasSetVisible_013 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_013.addInput(_Sequence_007, 2);
		_CanvasSetVisible_013.addInput(new armory.logicnode.StringNode(this, "CurrentBall"), 0);
		_CanvasSetVisible_013.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_013.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_007.addOutputs([_CanvasSetVisible_013]);
		var _CanvasSetVisible_011 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_011.addInput(_Sequence_007, 3);
		_CanvasSetVisible_011.addInput(new armory.logicnode.StringNode(this, "Impulse"), 0);
		_CanvasSetVisible_011.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_011.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_007.addOutputs([_CanvasSetVisible_011]);
		var _CanvasSetVisible_004 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_004.addInput(_Sequence_007, 4);
		_CanvasSetVisible_004.addInput(new armory.logicnode.StringNode(this, "Rearm"), 0);
		_CanvasSetVisible_004.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_004.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_007.addOutputs([_CanvasSetVisible_004]);
		var _CanvasSetVisible_016 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_016.addInput(_Sequence_007, 5);
		_CanvasSetVisible_016.addInput(new armory.logicnode.StringNode(this, "Aim"), 0);
		_CanvasSetVisible_016.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_016.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_007.addOutputs([_CanvasSetVisible_016]);
		var _CanvasSetVisible_029 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_029.addInput(_Sequence_007, 6);
		_CanvasSetVisible_029.addInput(new armory.logicnode.StringNode(this, "Rotate"), 0);
		_CanvasSetVisible_029.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_029.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_007.addOutputs([_CanvasSetVisible_029]);
		var _CanvasSetVisible_008 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_008.addInput(_Sequence_007, 7);
		_CanvasSetVisible_008.addInput(new armory.logicnode.StringNode(this, "PauseMenu"), 0);
		_CanvasSetVisible_008.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_008.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_007.addOutputs([_CanvasSetVisible_008]);
		var _Sequence_010 = new armory.logicnode.SequenceNode(this);
		_Sequence_010.addInput(_Sequence_007, 8);
		var _CanvasSetVisible_022 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_022.addInput(_Sequence_010, 0);
		_CanvasSetVisible_022.addInput(new armory.logicnode.StringNode(this, "SolidsCircle"), 0);
		_CanvasSetVisible_022.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_022.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_010.addOutputs([_CanvasSetVisible_022]);
		var _CanvasSetVisible_023 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_023.addInput(_Sequence_010, 1);
		_CanvasSetVisible_023.addInput(new armory.logicnode.StringNode(this, "Solids"), 0);
		_CanvasSetVisible_023.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_023.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_010.addOutputs([_CanvasSetVisible_023]);
		var _CanvasSetVisible_024 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_024.addInput(_Sequence_010, 2);
		_CanvasSetVisible_024.addInput(new armory.logicnode.StringNode(this, "StripedsRectangle"), 0);
		_CanvasSetVisible_024.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_024.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_010.addOutputs([_CanvasSetVisible_024]);
		var _CanvasSetVisible_025 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_025.addInput(_Sequence_010, 3);
		_CanvasSetVisible_025.addInput(new armory.logicnode.StringNode(this, "StripedsCircle"), 0);
		_CanvasSetVisible_025.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_025.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_010.addOutputs([_CanvasSetVisible_025]);
		var _CanvasSetVisible_026 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_026.addInput(_Sequence_010, 4);
		_CanvasSetVisible_026.addInput(new armory.logicnode.StringNode(this, "Stripeds"), 0);
		_CanvasSetVisible_026.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_026.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_010.addOutputs([_CanvasSetVisible_026]);
		_Sequence_007.addOutputs([_Sequence_010]);
		_SetProperty_008.addInput(_Sequence_007, 0);
		_SetProperty_008.addInput(_Self, 0);
		_SetProperty_008.addInput(_GetProperty_003, 1);
		_SetProperty_008.addInput(_Boolean_001, 0);
		_SetProperty_008.addOutputs([new armory.logicnode.NullNode(this)]);
		_Boolean_001.addOutputs([_SetProperty_001, _SetProperty_008]);
		_SetProperty_001.addInput(_Boolean_001, 0);
		_SetProperty_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_006.addOutputs([_SetProperty_001]);
		_Merge_006.addInput(_Sequence_006, 3);
		_Merge_006.addInput(_Sequence_013, 1);
		var _SetCamera_002 = new armory.logicnode.SetCameraNode(this);
		_SetCamera_002.addInput(_Merge_006, 0);
		_SetCamera_002.addInput(new armory.logicnode.ObjectNode(this, "BallView"), 0);
		_SetCamera_002.addOutputs([new armory.logicnode.NullNode(this)]);
		_Merge_006.addOutputs([_SetCamera_002]);
		_Sequence_013.addOutputs([_Merge_006]);
		_Alternate.addOutputs([_Sequence_013]);
		_Sequence_012.addInput(_Alternate, 0);
		_Sequence_012.addOutputs([_Merge_009]);
		_Sequence_012.addOutputs([_Merge_007]);
		_Sequence_012.addOutputs([_Merge_008]);
		_Merge_008.addInput(_Sequence_012, 2);
		_Merge_008.addInput(_SetVisible_001, 0);
		var _SetCamera_001 = new armory.logicnode.SetCameraNode(this);
		_SetCamera_001.addInput(_Merge_008, 0);
		_SetCamera_001.addInput(new armory.logicnode.ObjectNode(this, "UpView"), 0);
		_SetCamera_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_Merge_008.addOutputs([_SetCamera_001]);
		_SetVisible_001.addOutputs([_Merge_008]);
		_Timer_001.addOutputs([_SetVisible_001]);
		_Timer_001.addOutputs([new armory.logicnode.BooleanNode(this, false)]);
		_Timer_001.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_Timer_001.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_Timer_001.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_Timer_001.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_OnEvent_002.addOutputs([_Timer, _Timer_001, _Timer_002]);
		_Timer_002.addInput(_OnEvent_002, 0);
		_Timer_002.addInput(new armory.logicnode.FloatNode(this, 3.0), 0);
		_Timer_002.addInput(new armory.logicnode.IntegerNode(this, 1), 0);
		_Timer_002.addOutputs([new armory.logicnode.NullNode(this)]);
		var _CanvasSetText_001 = new armory.logicnode.CanvasSetTextNode(this);
		_CanvasSetText_001.addInput(_Timer_002, 1);
		_CanvasSetText_001.addInput(new armory.logicnode.StringNode(this, "Message"), 0);
		_CanvasSetText_001.addInput(new armory.logicnode.StringNode(this, " "), 0);
		_CanvasSetText_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_Timer_002.addOutputs([_CanvasSetText_001]);
		_Timer_002.addOutputs([new armory.logicnode.BooleanNode(this, false)]);
		_Timer_002.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_Timer_002.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_Timer_002.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_Timer_002.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_Merge_003.addOutputs([_Timer_002]);
		_CanvasSetText.addOutputs([_Merge_003]);
		_OnEvent.addOutputs([_Merge_001, _Merge_002, _CanvasSetText]);
		_Merge_002.addInput(_OnEvent, 0);
		_Merge_002.addInput(_Sequence_013, 0);
		_Merge_002.addOutputs([_Sequence_008]);
		_Sequence_008.addInput(_Merge_002, 0);
		var _CanvasSetVisible_006 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_006.addInput(_Sequence_008, 0);
		_CanvasSetVisible_006.addInput(new armory.logicnode.StringNode(this, "Rotate"), 0);
		_CanvasSetVisible_006.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_006.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_008.addOutputs([_CanvasSetVisible_006]);
		var _CanvasSetVisible_009 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_009.addInput(_Sequence_008, 1);
		_CanvasSetVisible_009.addInput(new armory.logicnode.StringNode(this, "CurrentPlayer"), 0);
		_CanvasSetVisible_009.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_009.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_008.addOutputs([_CanvasSetVisible_009]);
		var _CanvasSetVisible_014 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_014.addInput(_Sequence_008, 2);
		_CanvasSetVisible_014.addInput(new armory.logicnode.StringNode(this, "CurrentBall"), 0);
		_CanvasSetVisible_014.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_014.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_008.addOutputs([_CanvasSetVisible_014]);
		var _CanvasSetVisible_012 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_012.addInput(_Sequence_008, 3);
		_CanvasSetVisible_012.addInput(new armory.logicnode.StringNode(this, "Impulse"), 0);
		_CanvasSetVisible_012.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_012.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_008.addOutputs([_CanvasSetVisible_012]);
		var _Branch_003 = new armory.logicnode.BranchNode(this);
		_Branch_003.addInput(_Sequence_008, 4);
		var _GetProperty_002 = new armory.logicnode.GetPropertyNode(this);
		_GetProperty_002.addInput(new armory.logicnode.ObjectNode(this, "Rearm"), 0);
		_GetProperty_002.addInput(new armory.logicnode.StringNode(this, "Rearmable"), 0);
		_GetProperty_002.addOutputs([_Branch_003]);
		_GetProperty_002.addOutputs([new armory.logicnode.StringNode(this, "")]);
		_Branch_003.addInput(_GetProperty_002, 0);
		var _CanvasSetVisible_015 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_015.addInput(_Branch_003, 0);
		_CanvasSetVisible_015.addInput(new armory.logicnode.StringNode(this, "Rearm"), 0);
		_CanvasSetVisible_015.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_015.addOutputs([new armory.logicnode.NullNode(this)]);
		_Branch_003.addOutputs([_CanvasSetVisible_015]);
		_Branch_003.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_008.addOutputs([_Branch_003]);
		var _CanvasSetVisible_007 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_007.addInput(_Sequence_008, 5);
		_CanvasSetVisible_007.addInput(new armory.logicnode.StringNode(this, "PauseMenu"), 0);
		_CanvasSetVisible_007.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_007.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_008.addOutputs([_CanvasSetVisible_007]);
		_Sequence_008.addOutputs([_Sequence_006]);
		_Sequence_008.addOutputs([_Merge]);
		var _CanvasSetVisible_005 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_005.addInput(_Sequence_008, 8);
		_CanvasSetVisible_005.addInput(new armory.logicnode.StringNode(this, "Aim"), 0);
		_CanvasSetVisible_005.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_005.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_008.addOutputs([_CanvasSetVisible_005]);
		var _Sequence_009 = new armory.logicnode.SequenceNode(this);
		_Sequence_009.addInput(_Sequence_008, 9);
		var _CanvasSetVisible_017 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_017.addInput(_Sequence_009, 0);
		_CanvasSetVisible_017.addInput(new armory.logicnode.StringNode(this, "SolidsCircle"), 0);
		_CanvasSetVisible_017.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_017.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_009.addOutputs([_CanvasSetVisible_017]);
		var _CanvasSetVisible_018 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_018.addInput(_Sequence_009, 1);
		_CanvasSetVisible_018.addInput(new armory.logicnode.StringNode(this, "Solids"), 0);
		_CanvasSetVisible_018.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_018.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_009.addOutputs([_CanvasSetVisible_018]);
		var _CanvasSetVisible_019 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_019.addInput(_Sequence_009, 2);
		_CanvasSetVisible_019.addInput(new armory.logicnode.StringNode(this, "StripedsRectangle"), 0);
		_CanvasSetVisible_019.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_019.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_009.addOutputs([_CanvasSetVisible_019]);
		var _CanvasSetVisible_020 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_020.addInput(_Sequence_009, 3);
		_CanvasSetVisible_020.addInput(new armory.logicnode.StringNode(this, "StripedsCircle"), 0);
		_CanvasSetVisible_020.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_020.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_009.addOutputs([_CanvasSetVisible_020]);
		var _CanvasSetVisible_021 = new armory.logicnode.CanvasSetVisibleNode(this);
		_CanvasSetVisible_021.addInput(_Sequence_009, 4);
		_CanvasSetVisible_021.addInput(new armory.logicnode.StringNode(this, "Stripeds"), 0);
		_CanvasSetVisible_021.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_021.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_009.addOutputs([_CanvasSetVisible_021]);
		_Sequence_008.addOutputs([_Sequence_009]);
		var _SetProperty_009 = new armory.logicnode.SetPropertyNode(this);
		_SetProperty_009.addInput(_Sequence_008, 10);
		_SetProperty_009.addInput(_Self, 0);
		_SetProperty_009.addInput(_GetProperty_003, 1);
		_SetProperty_009.addInput(_Boolean, 0);
		_SetProperty_009.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_008.addOutputs([_SetProperty_009]);
		_Merge.addInput(_Sequence_008, 7);
		var _Sequence_011 = new armory.logicnode.SequenceNode(this);
		var _OnInit = new armory.logicnode.OnInitNode(this);
		_OnInit.addOutputs([_Sequence_011]);
		_Sequence_011.addInput(_OnInit, 0);
		_Sequence_011.addOutputs([_Merge]);
		var _SetProperty_011 = new armory.logicnode.SetPropertyNode(this);
		_SetProperty_011.addInput(_Sequence_011, 1);
		_SetProperty_011.addInput(_Self, 0);
		var _GetProperty_013 = new armory.logicnode.GetPropertyNode(this);
		_GetProperty_013.addInput(_Self, 0);
		_GetProperty_013.addInput(new armory.logicnode.StringNode(this, "SolidsCleaned"), 0);
		_GetProperty_013.addOutputs([new armory.logicnode.NullNode(this)]);
		_GetProperty_013.addOutputs([_SetProperty_011]);
		_SetProperty_011.addInput(_GetProperty_013, 1);
		_SetProperty_011.addInput(_Boolean, 0);
		_SetProperty_011.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_011.addOutputs([_SetProperty_011]);
		var _SetProperty_012 = new armory.logicnode.SetPropertyNode(this);
		_SetProperty_012.addInput(_Sequence_011, 2);
		_SetProperty_012.addInput(_Self, 0);
		var _GetProperty_014 = new armory.logicnode.GetPropertyNode(this);
		_GetProperty_014.addInput(_Self, 0);
		_GetProperty_014.addInput(new armory.logicnode.StringNode(this, "StripedsCleaned"), 0);
		_GetProperty_014.addOutputs([new armory.logicnode.NullNode(this)]);
		_GetProperty_014.addOutputs([_SetProperty_012]);
		_SetProperty_012.addInput(_GetProperty_014, 1);
		_SetProperty_012.addInput(_Boolean, 0);
		_SetProperty_012.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_011.addOutputs([_SetProperty_012]);
		_Merge.addInput(_Sequence_011, 0);
		_Merge.addOutputs([_Sequence_002]);
		_Sequence_002.addInput(_Merge, 0);
		_Sequence_002.addOutputs([_SetProperty_002]);
		var _SetProperty_003 = new armory.logicnode.SetPropertyNode(this);
		_SetProperty_003.addInput(_Sequence_002, 1);
		_SetProperty_003.addInput(_Self, 0);
		_SetProperty_003.addInput(new armory.logicnode.StringNode(this, "StripedOnPocket"), 0);
		_SetProperty_003.addInput(_Boolean, 0);
		_SetProperty_003.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_002.addOutputs([_SetProperty_003]);
		var _SetProperty_004 = new armory.logicnode.SetPropertyNode(this);
		_SetProperty_004.addInput(_Sequence_002, 2);
		_SetProperty_004.addInput(_Self, 0);
		_SetProperty_004.addInput(new armory.logicnode.StringNode(this, "FirstContact"), 0);
		var _String = new armory.logicnode.StringNode(this);
		_String.addInput(new armory.logicnode.StringNode(this, "None"), 0);
		_String.addOutputs([_SetProperty_004]);
		_SetProperty_004.addInput(_String, 0);
		_SetProperty_004.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_002.addOutputs([_SetProperty_004]);
		_SetProperty_002.addInput(_Sequence_002, 0);
		_SetProperty_002.addInput(_Self, 0);
		_SetProperty_002.addInput(new armory.logicnode.StringNode(this, "SolidOnPocket"), 0);
		_SetProperty_002.addInput(_Boolean, 0);
		_SetProperty_002.addOutputs([new armory.logicnode.NullNode(this)]);
		_Boolean.addOutputs([_SetProperty, _SetProperty_002, _SetProperty_003, _SetProperty_006, _SetProperty_011, _SetProperty_012, _SetProperty_009]);
		_SetProperty.addInput(_Boolean, 0);
		_SetProperty.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence.addOutputs([_SetProperty]);
		var _SendGlobalEvent_003 = new armory.logicnode.SendGlobalEventNode(this);
		_SendGlobalEvent_003.addInput(_Sequence, 1);
		_SendGlobalEvent_003.addInput(new armory.logicnode.StringNode(this, "HideInterface"), 0);
		_SendGlobalEvent_003.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence.addOutputs([_SendGlobalEvent_003]);
		var _SendGlobalEvent_001 = new armory.logicnode.SendGlobalEventNode(this);
		_SendGlobalEvent_001.addInput(_Sequence, 2);
		_SendGlobalEvent_001.addInput(new armory.logicnode.StringNode(this, "RestorePhysics"), 0);
		_SendGlobalEvent_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence.addOutputs([_SendGlobalEvent_001]);
		_Sequence.addOutputs([_Sequence_001]);
		_Sequence.addOutputs([_Timer_001]);
		_Sequence_001.addInput(_Sequence, 3);
		var _SetLocation_002 = new armory.logicnode.SetLocationNode(this);
		_SetLocation_002.addInput(_Sequence_001, 0);
		_SetLocation_002.addInput(new armory.logicnode.ObjectNode(this, "Cue"), 0);
		_SetLocation_002.addInput(new armory.logicnode.VectorNode(this, 0.0, 0.0, 0.0), 0);
		_SetLocation_002.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_001.addOutputs([_SetLocation_002]);
		_Sequence_001.addOutputs([_ApplyImpulse]);
		_Sequence_001.addOutputs([_Timer]);
		_Sequence_001.addOutputs([_Merge_004]);
		_ApplyImpulse.addInput(_Sequence_001, 1);
		_ApplyImpulse.addInput(_Self, 0);
		_ApplyImpulse.addInput(_Vector_001, 0);
		_ApplyImpulse.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_ApplyImpulse.addOutputs([new armory.logicnode.NullNode(this)]);
		_Vector_001.addOutputs([_ApplyImpulse]);
		_Math_001.addOutputs([_Vector_001, _Math_004]);
		var _Math_002 = new armory.logicnode.MathNode(this);
		_Math_002.property0 = "Multiply";
		_Math_002.property1 = "false";
		_Math_002.addInput(_CanvasGetSlider, 0);
		_Math_002.addInput(new armory.logicnode.FloatNode(this, -1.0), 0);
		var _Math_003 = new armory.logicnode.MathNode(this);
		_Math_003.property0 = "Multiply";
		_Math_003.property1 = "false";
		_Math_003.addInput(_Math_002, 0);
		_Math_003.addInput(new armory.logicnode.FloatNode(this, 2.5), 0);
		var _Vector_002 = new armory.logicnode.VectorNode(this);
		_Vector_002.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_002.addInput(_Math_003, 0);
		_Vector_002.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		var _SetLocation_001 = new armory.logicnode.SetLocationNode(this);
		var _Branch_002 = new armory.logicnode.BranchNode(this);
		var _OnSurface_001 = new armory.logicnode.OnSurfaceNode(this);
		_OnSurface_001.property0 = "Touched";
		_OnSurface_001.addOutputs([_Branch_002]);
		_Branch_002.addInput(_OnSurface_001, 0);
		_Branch_002.addInput(_GetProperty, 0);
		_Branch_002.addOutputs([_SetLocation_001]);
		_Branch_002.addOutputs([new armory.logicnode.NullNode(this)]);
		_SetLocation_001.addInput(_Branch_002, 0);
		_SetLocation_001.addInput(new armory.logicnode.ObjectNode(this, "Cue"), 0);
		_SetLocation_001.addInput(_Vector_002, 0);
		_SetLocation_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_Vector_002.addOutputs([_SetLocation_001]);
		_Math_003.addOutputs([_Vector_002]);
		_Math_002.addOutputs([_Math_003]);
		_CanvasGetSlider.addOutputs([_Math_001, _Gate, _Math_002, _Gate_002, _Gate_001]);
		_Gate_001.addInput(_CanvasGetSlider, 0);
		_Gate_001.addInput(_Float, 0);
		_Gate_001.addOutputs([_RotateObject]);
		_Gate_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_Branch_001.addOutputs([_Gate_001]);
		_Branch_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_GetProperty.addOutputs([_Branch_001, _Branch, _Branch_004, _Branch_002]);
		_GetProperty.addOutputs([_SetProperty, _SetProperty_001]);
		var _GetProperty_001 = new armory.logicnode.GetPropertyNode(this);
		_GetProperty_001.addInput(_Self, 0);
		_GetProperty_001.addInput(new armory.logicnode.StringNode(this, "OnPocket"), 0);
		_GetProperty_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_GetProperty_001.addOutputs([new armory.logicnode.StringNode(this, "")]);
		_Self.addOutputs([_GetProperty, _SetProperty, _SetProperty_001, _GetLocation, _SetProperty_002, _SetProperty_003, _SetProperty_004, _GetProperty_001, _SetVisible_002, _GetProperty_003, _SetProperty_008, _SetProperty_009, _ApplyImpulse, _SetRotation_002, _GetProperty_013, _GetProperty_014, _SetProperty_011, _SetProperty_012]);
		_GetProperty_003.addInput(_Self, 0);
		_GetProperty_003.addInput(new armory.logicnode.StringNode(this, "LockScene"), 0);
		_GetProperty_003.addOutputs([_Branch_005, _Branch_006, _Branch_007, _Branch_008]);
		_GetProperty_003.addOutputs([_SetProperty_008, _SetProperty_009]);
		_Branch_006.addInput(_GetProperty_003, 0);
		_Branch_006.addOutputs([new armory.logicnode.NullNode(this)]);
		_Branch_006.addOutputs([_Branch]);
		_Branch.addInput(_Branch_006, 1);
		_Branch.addInput(_GetProperty, 0);
		_Branch.addOutputs([_Gate]);
		_Branch.addOutputs([new armory.logicnode.NullNode(this)]);
		_Gate.addInput(_Branch, 0);
		_Gate.addInput(_CanvasGetSlider, 0);
		_Gate.addInput(_Float, 0);
		_Gate.addOutputs([_Sequence]);
		_Gate.addOutputs([_Merge_004]);
		_Merge_004.addInput(_Gate, 1);
		_Merge_004.addInput(_Sequence_001, 3);
		_Merge_004.addOutputs([_CanvasSetSlider]);
		_CanvasSetSlider.addInput(_Merge_004, 0);
		_CanvasSetSlider.addInput(new armory.logicnode.StringNode(this, "Impulse"), 0);
		_CanvasSetSlider.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_CanvasSetSlider.addOutputs([new armory.logicnode.NullNode(this)]);
	}
}