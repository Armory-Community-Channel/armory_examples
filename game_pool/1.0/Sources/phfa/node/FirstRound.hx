package phfa.node;

@:keep class FirstRound extends armory.logicnode.LogicTree {

	var functionNodes:Map<String, armory.logicnode.FunctionNode>;

	var functionOutputNodes:Map<String, armory.logicnode.FunctionOutputNode>;

	public function new() {
		super();
		this.functionNodes = new Map();
		this.functionOutputNodes = new Map();
		notifyOnAdd(add);
	}

	override public function add() {
		var _CanvasSetText_001 = new armory.logicnode.CanvasSetTextNode(this);
		var _Timer_002 = new armory.logicnode.TimerNode(this);
		var _Merge_003 = new armory.logicnode.MergeNode(this);
		var _CanvasSetText = new armory.logicnode.CanvasSetTextNode(this);
		var _SendGlobalEvent = new armory.logicnode.SendGlobalEventNode(this);
		var _Sequence_002 = new armory.logicnode.SequenceNode(this);
		var _Timer = new armory.logicnode.TimerNode(this);
		var _Timer_001 = new armory.logicnode.TimerNode(this);
		var _Sequence_003 = new armory.logicnode.SequenceNode(this);
		var _Branch_003 = new armory.logicnode.BranchNode(this);
		var _OnInit = new armory.logicnode.OnInitNode(this);
		var _CanvasSetScale_001 = new armory.logicnode.CanvasSetScaleNode(this);
		_CanvasSetScale_001.addInput(_OnInit, 0);
		_CanvasSetScale_001.addInput(new armory.logicnode.StringNode(this, "Title"), 0);
		_CanvasSetScale_001.addInput(new armory.logicnode.IntegerNode(this, 96), 0);
		var _DisplayInfo = new armory.logicnode.DisplayInfoNode(this);
		var _CanvasSetScale = new armory.logicnode.CanvasSetScaleNode(this);
		_CanvasSetScale.addInput(_OnInit, 0);
		_CanvasSetScale.addInput(new armory.logicnode.StringNode(this, "Message"), 0);
		_CanvasSetScale.addInput(new armory.logicnode.IntegerNode(this, 48), 0);
		_CanvasSetScale.addInput(_DisplayInfo, 0);
		_CanvasSetScale.addOutputs([new armory.logicnode.NullNode(this)]);
		var _CanvasSetScale_002 = new armory.logicnode.CanvasSetScaleNode(this);
		_CanvasSetScale_002.addInput(_OnInit, 0);
		_CanvasSetScale_002.addInput(new armory.logicnode.StringNode(this, "Subtitle"), 0);
		_CanvasSetScale_002.addInput(new armory.logicnode.IntegerNode(this, 48), 0);
		_CanvasSetScale_002.addInput(_DisplayInfo, 0);
		_CanvasSetScale_002.addOutputs([new armory.logicnode.NullNode(this)]);
		_DisplayInfo.addOutputs([_CanvasSetScale, _CanvasSetScale_001, _CanvasSetScale_002]);
		_DisplayInfo.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_CanvasSetScale_001.addInput(_DisplayInfo, 0);
		_CanvasSetScale_001.addOutputs([new armory.logicnode.NullNode(this)]);
		var _Sequence_001 = new armory.logicnode.SequenceNode(this);
		_Sequence_001.addInput(_OnInit, 0);
		var _CanvasSetScale_003 = new armory.logicnode.CanvasSetScaleNode(this);
		_CanvasSetScale_003.addInput(_Sequence_001, 0);
		_CanvasSetScale_003.addInput(new armory.logicnode.StringNode(this, "Title"), 0);
		_CanvasSetScale_003.addInput(new armory.logicnode.IntegerNode(this, 96), 0);
		var _DisplayInfo_001 = new armory.logicnode.DisplayInfoNode(this);
		var _CanvasSetScale_004 = new armory.logicnode.CanvasSetScaleNode(this);
		_CanvasSetScale_004.addInput(_Sequence_001, 1);
		_CanvasSetScale_004.addInput(new armory.logicnode.StringNode(this, "Subtitle"), 0);
		_CanvasSetScale_004.addInput(new armory.logicnode.IntegerNode(this, 48), 0);
		_CanvasSetScale_004.addInput(_DisplayInfo_001, 0);
		_CanvasSetScale_004.addOutputs([new armory.logicnode.NullNode(this)]);
		var _CanvasSetScale_005 = new armory.logicnode.CanvasSetScaleNode(this);
		_CanvasSetScale_005.addInput(_Sequence_001, 2);
		_CanvasSetScale_005.addInput(new armory.logicnode.StringNode(this, "Message"), 0);
		_CanvasSetScale_005.addInput(new armory.logicnode.IntegerNode(this, 48), 0);
		_CanvasSetScale_005.addInput(_DisplayInfo_001, 0);
		_CanvasSetScale_005.addOutputs([new armory.logicnode.NullNode(this)]);
		var _CanvasSetScale_006 = new armory.logicnode.CanvasSetScaleNode(this);
		_CanvasSetScale_006.addInput(_Sequence_001, 3);
		_CanvasSetScale_006.addInput(new armory.logicnode.StringNode(this, "Version"), 0);
		_CanvasSetScale_006.addInput(new armory.logicnode.IntegerNode(this, 24), 0);
		_CanvasSetScale_006.addInput(_DisplayInfo_001, 0);
		_CanvasSetScale_006.addOutputs([new armory.logicnode.NullNode(this)]);
		_DisplayInfo_001.addOutputs([_CanvasSetScale_003, _CanvasSetScale_004, _CanvasSetScale_005, _CanvasSetScale_006]);
		_DisplayInfo_001.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_CanvasSetScale_003.addInput(_DisplayInfo_001, 0);
		_CanvasSetScale_003.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_001.addOutputs([_CanvasSetScale_003]);
		_Sequence_001.addOutputs([_CanvasSetScale_004]);
		_Sequence_001.addOutputs([_CanvasSetScale_005]);
		_Sequence_001.addOutputs([_CanvasSetScale_006]);
		_OnInit.addOutputs([_Branch_003, _CanvasSetScale_001, _CanvasSetScale, _CanvasSetScale_002, _Sequence_001]);
		_Branch_003.addInput(_OnInit, 0);
		var _GetProperty_001 = new armory.logicnode.GetPropertyNode(this);
		_GetProperty_001.addInput(new armory.logicnode.ObjectNode(this, "White"), 0);
		_GetProperty_001.addInput(new armory.logicnode.StringNode(this, "ValidatedRound"), 0);
		var _Branch = new armory.logicnode.BranchNode(this);
		var _OnContact = new armory.logicnode.OnContactNode(this);
		_OnContact.property0 = "Begin";
		_OnContact.addInput(new armory.logicnode.ObjectNode(this, "TriggerCushion"), 0);
		_OnContact.addInput(new armory.logicnode.ObjectNode(this, "White"), 0);
		_OnContact.addOutputs([_Branch]);
		_Branch.addInput(_OnContact, 0);
		_Branch.addInput(_GetProperty_001, 0);
		_Branch.addOutputs([new armory.logicnode.NullNode(this)]);
		var _Gate = new armory.logicnode.GateNode(this);
		_Gate.property0 = "Equal";
		_Gate.property1 = 9.999999747378752e-05;
		_Gate.addInput(_Branch, 1);
		var _GetProperty_002 = new armory.logicnode.GetPropertyNode(this);
		_GetProperty_002.addInput(new armory.logicnode.ObjectNode(this, "White"), 0);
		_GetProperty_002.addInput(new armory.logicnode.StringNode(this, "FirstContact"), 0);
		_GetProperty_002.addOutputs([_Gate]);
		_GetProperty_002.addOutputs([new armory.logicnode.StringNode(this, "")]);
		_Gate.addInput(_GetProperty_002, 0);
		var _String_001 = new armory.logicnode.StringNode(this);
		_String_001.addInput(new armory.logicnode.StringNode(this, "None"), 0);
		_String_001.addOutputs([_Gate]);
		_Gate.addInput(_String_001, 0);
		var _SetProperty = new armory.logicnode.SetPropertyNode(this);
		_SetProperty.addInput(_Gate, 0);
		_SetProperty.addInput(new armory.logicnode.ObjectNode(this, "White"), 0);
		_SetProperty.addInput(new armory.logicnode.StringNode(this, "FirstContact"), 0);
		var _String = new armory.logicnode.StringNode(this);
		_String.addInput(new armory.logicnode.StringNode(this, "Cushion"), 0);
		_String.addOutputs([_SetProperty]);
		_SetProperty.addInput(_String, 0);
		_SetProperty.addOutputs([new armory.logicnode.NullNode(this)]);
		_Gate.addOutputs([_SetProperty]);
		_Gate.addOutputs([new armory.logicnode.NullNode(this)]);
		_Branch.addOutputs([_Gate]);
		_GetProperty_001.addOutputs([_Branch, _Branch_003]);
		var _SetProperty_001 = new armory.logicnode.SetPropertyNode(this);
		var _OnEvent = new armory.logicnode.OnEventNode(this);
		_OnEvent.property0 = "Validate";
		_OnEvent.addOutputs([_SetProperty_001]);
		_SetProperty_001.addInput(_OnEvent, 0);
		_SetProperty_001.addInput(new armory.logicnode.ObjectNode(this, "White"), 0);
		_SetProperty_001.addInput(_GetProperty_001, 1);
		var _Boolean = new armory.logicnode.BooleanNode(this);
		_Boolean.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		var _SetProperty_002 = new armory.logicnode.SetPropertyNode(this);
		_SetProperty_002.addInput(_Sequence_003, 0);
		_SetProperty_002.addInput(new armory.logicnode.ObjectNode(this, "Rearm"), 0);
		_SetProperty_002.addInput(new armory.logicnode.StringNode(this, "LimitedToTheKitchen"), 0);
		_SetProperty_002.addInput(_Boolean, 0);
		_SetProperty_002.addOutputs([new armory.logicnode.NullNode(this)]);
		var _SetProperty_004 = new armory.logicnode.SetPropertyNode(this);
		_SetProperty_004.addInput(_Sequence_003, 3);
		_SetProperty_004.addInput(new armory.logicnode.ObjectNode(this, "Rearm"), 0);
		_SetProperty_004.addInput(new armory.logicnode.StringNode(this, "Rearmable"), 0);
		_SetProperty_004.addInput(_Boolean, 0);
		_SetProperty_004.addOutputs([new armory.logicnode.NullNode(this)]);
		var _SetProperty_005 = new armory.logicnode.SetPropertyNode(this);
		_SetProperty_005.addInput(_Branch_003, 1);
		_SetProperty_005.addInput(new armory.logicnode.ObjectNode(this, "White"), 0);
		var _GetProperty = new armory.logicnode.GetPropertyNode(this);
		_GetProperty.addInput(new armory.logicnode.ObjectNode(this, "White"), 0);
		_GetProperty.addInput(new armory.logicnode.StringNode(this, "LockScene"), 0);
		_GetProperty.addOutputs([new armory.logicnode.NullNode(this)]);
		_GetProperty.addOutputs([_SetProperty_005]);
		_SetProperty_005.addInput(_GetProperty, 1);
		_SetProperty_005.addInput(_Boolean, 0);
		_SetProperty_005.addOutputs([new armory.logicnode.NullNode(this)]);
		_Boolean.addOutputs([_SetProperty_001, _SetProperty_002, _SetProperty_004, _SetProperty_005]);
		_SetProperty_001.addInput(_Boolean, 0);
		var _Sequence = new armory.logicnode.SequenceNode(this);
		_Sequence.addInput(_SetProperty_001, 0);
		var _RemoveObject = new armory.logicnode.RemoveObjectNode(this);
		_RemoveObject.addInput(_Sequence, 0);
		_RemoveObject.addInput(new armory.logicnode.ObjectNode(this, "Triangle"), 0);
		_RemoveObject.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence.addOutputs([_RemoveObject]);
		var _SetProperty_003 = new armory.logicnode.SetPropertyNode(this);
		_SetProperty_003.addInput(_Sequence, 1);
		_SetProperty_003.addInput(new armory.logicnode.ObjectNode(this, "Rearm"), 0);
		_SetProperty_003.addInput(new armory.logicnode.StringNode(this, "LimitedToTheKitchen"), 0);
		var _Boolean_001 = new armory.logicnode.BooleanNode(this);
		_Boolean_001.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_Boolean_001.addOutputs([_SetProperty_003]);
		_SetProperty_003.addInput(_Boolean_001, 0);
		_SetProperty_003.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence.addOutputs([_SetProperty_003]);
		_SetProperty_001.addOutputs([_Sequence]);
		_GetProperty_001.addOutputs([_SetProperty_001]);
		_Branch_003.addInput(_GetProperty_001, 0);
		_Branch_003.addOutputs([new armory.logicnode.NullNode(this)]);
		var _CanvasSetText_002 = new armory.logicnode.CanvasSetTextNode(this);
		_CanvasSetText_002.addInput(_Branch_003, 1);
		_CanvasSetText_002.addInput(new armory.logicnode.StringNode(this, "Message"), 0);
		_CanvasSetText_002.addInput(new armory.logicnode.StringNode(this, "Player 1 starts the match!"), 0);
		_CanvasSetText_002.addOutputs([_Merge_003]);
		_Branch_003.addOutputs([_Sequence_003, _CanvasSetText_002, _SetProperty_005]);
		_Sequence_003.addInput(_Branch_003, 1);
		_Sequence_003.addOutputs([_SetProperty_002]);
		var _SendGlobalEvent_001 = new armory.logicnode.SendGlobalEventNode(this);
		_SendGlobalEvent_001.addInput(_Sequence_003, 1);
		_SendGlobalEvent_001.addInput(new armory.logicnode.StringNode(this, "RemovePhysics"), 0);
		_SendGlobalEvent_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_003.addOutputs([_SendGlobalEvent_001]);
		var _SetCamera = new armory.logicnode.SetCameraNode(this);
		_SetCamera.addInput(_Sequence_003, 2);
		_SetCamera.addInput(new armory.logicnode.ObjectNode(this, "UpView"), 0);
		_SetCamera.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_003.addOutputs([_SetCamera]);
		_Sequence_003.addOutputs([_SetProperty_004]);
		_Sequence_003.addOutputs([_Timer_001]);
		_Timer_001.addInput(_Sequence_003, 4);
		_Timer_001.addInput(new armory.logicnode.NullNode(this), 0);
		_Timer_001.addInput(new armory.logicnode.NullNode(this), 0);
		_Timer_001.addInput(new armory.logicnode.FloatNode(this, 3.0), 0);
		_Timer_001.addInput(new armory.logicnode.IntegerNode(this, 1), 0);
		_Timer_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_Timer_001.addOutputs([_Timer]);
		_Timer_001.addOutputs([new armory.logicnode.BooleanNode(this, false)]);
		_Timer_001.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_Timer_001.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_Timer_001.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_Timer_001.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_Timer.addInput(_Timer_001, 1);
		_Timer.addInput(new armory.logicnode.NullNode(this), 0);
		_Timer.addInput(new armory.logicnode.NullNode(this), 0);
		_Timer.addInput(new armory.logicnode.FloatNode(this, 1.0), 0);
		_Timer.addInput(new armory.logicnode.IntegerNode(this, 1), 0);
		_Timer.addOutputs([new armory.logicnode.NullNode(this)]);
		_Timer.addOutputs([_Sequence_002]);
		var _Branch_004 = new armory.logicnode.BranchNode(this);
		var _OnUpdate = new armory.logicnode.OnUpdateNode(this);
		_OnUpdate.property0 = "Update";
		_OnUpdate.addOutputs([_Branch_004]);
		_Branch_004.addInput(_OnUpdate, 0);
		_Branch_004.addInput(_Timer, 2);
		var _TranslateObject = new armory.logicnode.TranslateObjectNode(this);
		_TranslateObject.addInput(_Branch_004, 0);
		_TranslateObject.addInput(new armory.logicnode.ObjectNode(this, "Triangle"), 0);
		_TranslateObject.addInput(new armory.logicnode.VectorNode(this, 0.25, 0.25, 0.25), 0);
		_TranslateObject.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_TranslateObject.addOutputs([new armory.logicnode.NullNode(this)]);
		var _RotateObject = new armory.logicnode.RotateObjectNode(this);
		_RotateObject.addInput(_Branch_004, 0);
		_RotateObject.addInput(new armory.logicnode.ObjectNode(this, "Triangle"), 0);
		_RotateObject.addInput(new armory.logicnode.VectorNode(this, 0.05000000074505806, 0.05000000074505806, 0.05000000074505806), 0);
		_RotateObject.addOutputs([new armory.logicnode.NullNode(this)]);
		_Branch_004.addOutputs([_TranslateObject, _RotateObject]);
		_Branch_004.addOutputs([new armory.logicnode.NullNode(this)]);
		_Timer.addOutputs([_Branch_004]);
		_Timer.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_Timer.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_Timer.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_Timer.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_Sequence_002.addInput(_Timer, 1);
		var _SetVisible = new armory.logicnode.SetVisibleNode(this);
		_SetVisible.addInput(_Sequence_002, 0);
		_SetVisible.addInput(new armory.logicnode.ObjectNode(this, "Triangle"), 0);
		_SetVisible.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_SetVisible.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sequence_002.addOutputs([_SetVisible]);
		_Sequence_002.addOutputs([_SendGlobalEvent]);
		_SendGlobalEvent.addInput(_Sequence_002, 1);
		_SendGlobalEvent.addInput(new armory.logicnode.StringNode(this, "ShowInterface"), 0);
		_SendGlobalEvent.addOutputs([_CanvasSetText]);
		_CanvasSetText.addInput(_SendGlobalEvent, 0);
		_CanvasSetText.addInput(new armory.logicnode.StringNode(this, "Message"), 0);
		_CanvasSetText.addInput(new armory.logicnode.StringNode(this, "Ready!"), 0);
		_CanvasSetText.addOutputs([_Merge_003]);
		_Merge_003.addInput(_CanvasSetText, 0);
		_Merge_003.addInput(_CanvasSetText_002, 0);
		_Merge_003.addOutputs([_Timer_002]);
		_Timer_002.addInput(_Merge_003, 0);
		_Timer_002.addInput(new armory.logicnode.NullNode(this), 0);
		var _OnEvent_001 = new armory.logicnode.OnEventNode(this);
		_OnEvent_001.property0 = "MainMenuConfirm";
		_OnEvent_001.addOutputs([_Timer_002]);
		_Timer_002.addInput(_OnEvent_001, 0);
		_Timer_002.addInput(new armory.logicnode.FloatNode(this, 3.0), 0);
		_Timer_002.addInput(new armory.logicnode.IntegerNode(this, 1), 0);
		_Timer_002.addOutputs([new armory.logicnode.NullNode(this)]);
		_Timer_002.addOutputs([_CanvasSetText_001]);
		_Timer_002.addOutputs([new armory.logicnode.BooleanNode(this, false)]);
		_Timer_002.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_Timer_002.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_Timer_002.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_Timer_002.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_CanvasSetText_001.addInput(_Timer_002, 1);
		_CanvasSetText_001.addInput(new armory.logicnode.StringNode(this, "Message"), 0);
		_CanvasSetText_001.addInput(new armory.logicnode.StringNode(this, " "), 0);
		_CanvasSetText_001.addOutputs([new armory.logicnode.NullNode(this)]);
	}
}